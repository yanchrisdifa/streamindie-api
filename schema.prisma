// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = "file:./keystone.db"
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                        String  @id @default(cuid())
  name                      String  @default("")
  email                     String  @unique @default("")
  password                  String
  posts                     Post[]  @relation("Post_author")
  profile_picture_filesize  Int?
  profile_picture_extension String?
  profile_picture_width     Int?
  profile_picture_height    Int?
  profile_picture_id        String?
  image_filesize            Int?
  image_extension           String?
  image_width               Int?
  image_height              Int?
  image_id                  String?
  genres                    Genre[] @relation("Genre_artists")
  songs                     Song[]  @relation("Song_artists")
  userType                  String? @default("user")
}

model Song {
  id              String   @id @default(cuid())
  title           String   @default("")
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_id        String?
  artists         User?    @relation("Song_artists", fields: [artistsId], references: [id])
  artistsId       String?  @map("artists")
  genre           Genre?   @relation("Song_genre", fields: [genreId], references: [id])
  genreId         String?  @map("genre")
  postedAt        DateTime @default(now())
  audio_filesize  Int?
  audio_filename  String?

  @@index([artistsId])
  @@index([genreId])
}

model Genre {
  id              String  @id @default(cuid())
  name            String  @default("")
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_id        String?
  artists         User[]  @relation("Genre_artists")
  songs           Song[]  @relation("Song_genre")
}

model Post {
  id          String    @id @default(cuid())
  title       String    @default("")
  status      String?   @default("draft")
  content     String    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  publishDate DateTime?
  author      User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId    String?   @map("author")
  tags        Tag[]     @relation("Post_tags")

  @@index([authorId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}